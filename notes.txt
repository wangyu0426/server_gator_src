wget -c http://download.oracle.com/otn-pub/java/jdk/8u11-b12/jdk-8u11-linux-i586.tar.gz
第二步


sudo add-apt-repository ppa:plushuang-tw/uget-stable 
sudo apt-get update 
sudo apt-get install uget

sudo add-apt-repository ppa:t-tujikawa/ppa 
sudo apt-get update; sudo apt-get install aria2

sudo yarn config set registry https://registry.npm.taobao.org --global
sudo yarn config set disturl https://npm.taobao.org/dist --global

Create the file /etc/apt/sources.list.d/pgdg.list, and add a line for the repository
deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main

wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc |  sudo apt-key add -
sudo apt-get update
touch ~/.gradle/gradle.properties && echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties

deb格式的搜狗输入法，搜狗拼音官网可以下载到
方法/步骤
如果你的系统已经装过fctix请先完全卸载
sudo apt-get purge fcitx*
sudo purge autoremove
2
使用deb安装工具gdebi，这个工具能解决所有依赖问题
sudo apt-get install gdebi
3
直接安装
gdebi ~/sogou_pinyin_linux_1.0.0.0033_amd64.deb
然后注销，如果没有出现搜狗请在
系统设置->语言支持->键盘输入方式系统->选择fcitx
注销

java SE install:
sudo add-apt-repository ppa:webupd8team/java

sudo apt-get update

sudo apt-get install java-common oracle-java8-installer


go path:

export GOROOT=/usr/local/go
export PATH=$PATH:/usr/local/go/bin


export ANDROID_HOME=~/Android/Sdk
PATH="~/Android/Sdk/tools:~/Android/Sdk/platform-tools:${PATH}"
export PATH


l2tp client install:
sudo add-apt-repository ppa:nm-l2tp/network-manager-l2tp  
sudo apt-get update  
sudo apt-get install network-manager-l2tp  
To install the network manager l2tp that supports L2TP for ubuntu 16.04

Walkthrough for building from source: http://blog.z-proj.com/enabling-l2tp-over-ipsec-on-ubuntu-16-04/

shareimprove this answer
answered Mar 29 at 12:08

zed
16117
  	 	
You also need to sudo apt-get install network-manager-l2tp-gnome before you can use the GUI in Network Manager. – BenFreke Mar 29 at 23:37


npm config set registry https://registry.npm.taobao.org --global;  npm config set disturl https://npm.taobao.org/dist --global

go build -ldflags "-s -w" 

go build -gcflags  "-N -l"

gdb -d $GOROOT 

sudo tar cvpzf backup.tgz --exclude=/proc --exclude=/lost+found --exclude=/media/work/data/backup.tgz --exclude=/mnt  --exclude=/media --exclude=/sys  /

env WINEPREFIX="/home/work/.wine" wine C:\\windows\\command\\start.exe /Unix /home/work/.wine/dosdevices/c:/users/Public/Desktop/Beyond\ Compare\ 4.lnk

  nginx path prefix: "/usr/local/openresty/nginx"
  nginx binary file: "/usr/local/openresty/nginx/sbin/nginx"
  nginx modules path: "/usr/local/openresty/nginx/modules"
  nginx configuration prefix: "/usr/local/openresty/nginx/conf"
  nginx configuration file: "/usr/local/openresty/nginx/conf/nginx.conf"
  nginx pid file: "/usr/local/openresty/nginx/logs/nginx.pid"
  nginx error log file: "/usr/local/openresty/nginx/logs/error.log"
  nginx http access log file: "/usr/local/openresty/nginx/logs/access.log"

  git config --global user.email "liuwenkui_ccnu@hotmail.com"
  git config --global user.name "lwk"


  /--------------------------------------------------------------------------------

Enter your token from the browser:  macpcdeMac-Pro:pibo macpc$
macpcdeMac-Pro:pibo macpc$
macpcdeMac-Pro:pibo macpc$ code-push register
Please login to Mobile Center in the browser window we've just opened.

Enter your token from the browser:  46b1b412be64d62cdc4820168d37eb2d182f330d

Successfully logged-in. Your session file was written to /Users/macpc/.code-push.config. You can run the code-push logout command at any time to delete this file and terminate your session.

macpcdeMac-Pro:pibo macpc$ code-push access-key list
┌──────────────────────┬───────────────┐
│ Name                 │ Created       │
├──────────────────────┼───────────────┤
│ macpcdeMac-Pro.local │ 2 minutes ago │
└──────────────────────┴───────────────┘
macpcdeMac-Pro:pibo macpc$ code-push access-key ls
┌──────────────────────┬───────────────┐
│ Name                 │ Created       │
├──────────────────────┼───────────────┤
│ macpcdeMac-Pro.local │ 2 minutes ago │
└──────────────────────┴───────────────┘
macpcdeMac-Pro:pibo macpc$ code-push app add 'Gator 3'
Usage: code-push app add <appName> <os> <platform>

选项：
  -v, --version  显示版本号  [布尔]

示例：
  app add MyApp ios react-native      Adds app "MyApp", indicating that it's an iOS React Native app
  app add MyApp windows react-native  Adds app "MyApp", indicating that it's a Windows React Native app
  app add MyApp android cordova       Adds app "MyApp", indicating that it's an Android Cordova app

macpcdeMac-Pro:pibo macpc$ code-push app add Gator3
Usage: code-push app add <appName> <os> <platform>

选项：
  -v, --version  显示版本号  [布尔]

示例：
  app add MyApp ios react-native      Adds app "MyApp", indicating that it's an iOS React Native app
  app add MyApp windows react-native  Adds app "MyApp", indicating that it's a Windows React Native app
  app add MyApp android cordova       Adds app "MyApp", indicating that it's an Android Cordova app

macpcdeMac-Pro:pibo macpc$ code-push app add 'Gator 3' ios react-native
[Error]  The app name "Gator 3" isn't valid. It can only contain alphanumeric characters, dashes, periods, or underscores.
macpcdeMac-Pro:pibo macpc$ code-push app add 'Gator 3' ios react-native
[Error]  The app name "Gator 3" isn't valid. It can only contain alphanumeric characters, dashes, periods, or underscores.
macpcdeMac-Pro:pibo macpc$
macpcdeMac-Pro:pibo macpc$ code-push app add Gator3 ios react-native
Successfully added the "Gator3" app, along with the following default deployments:
┌────────────┬──────────────────────────────────────────────────────────────────┐
│ Name       │ Deployment Key                                                   │
├────────────┼──────────────────────────────────────────────────────────────────┤
│ Production │ wlD23xkRxO_tsE-0hXyk5RAEU_bjbf2825ac-f4f2-4046-a50c-3b46aeeb4c05 │
├────────────┼──────────────────────────────────────────────────────────────────┤
│ Staging    │ hRirzI6RIRSC6U-orIAHY4Yu3NVPbf2825ac-f4f2-4046-a50c-3b46aeeb4c05 │
└────────────┴──────────────────────────────────────────────────────────────────┘
macpcdeMac-Pro:pibo macpc$
macpcdeMac-Pro:pibo macpc$ code-push app list
┌────────┬─────────────────────┐
│ Name   │ Deployments         │
├────────┼─────────────────────┤
│ Gator3 │ Production, Staging │
└────────┴─────────────────────┘
macpcdeMac-Pro:pibo macpc$ code-push app add pibo ios react-native
Successfully added the "pibo" app, along with the following default deployments:
┌────────────┬──────────────────────────────────────────────────────────────────┐
│ Name       │ Deployment Key                                                   │
├────────────┼──────────────────────────────────────────────────────────────────┤
│ Production │ d-3mjRy0LvH5_x1bFufs0AydD8EZbf2825ac-f4f2-4046-a50c-3b46aeeb4c05 │
├────────────┼──────────────────────────────────────────────────────────────────┤
│ Staging    │ JhoMD4dUBAnLEY4gDnhWDfKoGdBrbf2825ac-f4f2-4046-a50c-3b46aeeb4c05 │
└────────────┴──────────────────────────────────────────────────────────────────┘
macpcdeMac-Pro:pibo macpc$ code-push app list
┌────────┬─────────────────────┐
│ Name   │ Deployments         │
├────────┼─────────────────────┤
│ Gator3 │ Production, Staging │
├────────┼─────────────────────┤
│ pibo   │ Production, Staging │
└────────┴─────────────────────┘
macpcdeMac-Pro:pibo macpc$ code-push app list pibo
Usage: code-push app list [options]

选项：
  --format       Output format to display your apps with ("json" or "table")  [字符串] [默认值: "table"]
  -v, --version  显示版本号  [布尔]

示例：
  app list                List your apps in tabular format
  app list --format json  List your apps in JSON format

macpcdeMac-Pro:pibo macpc$
